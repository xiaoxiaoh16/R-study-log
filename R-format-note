1. 工作目录
   getcwd()  # 显示当前工作目录
   setcwd(*where)  # 设置工作目录到某路径

2. 输入/输出选项
   # 直接输出到屏幕
   source("script1.R")
   
   # 文本追加模式 append ，输出到文件的同时输出到屏幕 split
   sink("myoutput", append=TRUE, split=TRUE) 
   pdf("mygraphs.pdf")
   source("script2.R")

   # 不保存输出
   sink()
   dev.off()
   source("script3.R")

3. 基本语法
   R 的赋值可以使用 = 或者 <-（但建议一律使用 <-)
   大小写敏感
   逻辑函数
     逻辑关系符：分别有：<, <=, >, >=, ==, 以及 !=。判断两个浮点数值关系时请谨慎使用 ==,这一点与其他科学计算语言一样。
	 逻辑运算符：与：x&y，或：x|y，非：!x。
	 逻辑判断： isTRUE(x) 判断 x 是否为真。
   工作空间
     在 R 中，路径中需要使用正斜杠(/)。如果你使用 Windows 系统，也可以使用双反斜杠。
     # getwd()  # 获取当前工作空间路径
     # setwd(path_string)  # 设置工作空间

4. 基本要旨
   文件扩展名名：用大写字母 R。
   命名规则：在任何时候都不要使用短横或者下划线。具体的详细格式应当有：
     变量名：全小写，并使用句点分隔（avg.clicks）；或者不用句点而改用大写字母分隔（avgClicks）。
	 函数名：首字母大写，使用大写字母分隔（CalculateAvgClicks ）。不使用句点。
	 常量：命名类似函数，但是以小写字母 k 开头（kConstantName）。
   行宽：最多80字符
   缩进：两个空格而不是制表符。
   空格：
     在二元操作符（包括关系符和运算符，如 <- = + 等）的两侧加空格，除非它在函数调用语句中。
	 逗号的右侧空格。
	 左圆括号的左侧空格，除非它在函数调用语句中。
	 单语句断行时，对齐赋值符号而添加额外空格是允许的。
   花括号：左花括号不单独一行，右花括号总是单独一行。如果有连续的花括号，这样书写：
     if (condition) {
	   one or more lines
	 } else {
      one or more lines
	 }

5. 代码布局
   按以下顺序布局：
     注释：版权声明
	 注释：作者注
	 注释：文件描述，包括功能、输入、输出
	 source() 与 library() 语句
	 函数定义
	 执行语句
   注释规则：
     行间注释：注释符“#”顶格，之后空一格，书写注释
	 行尾注释：仿上，并在注释符与语句尾之间空两格
   TODO风格：全篇TODO的风格请统一。
   函数规则：
     函数定义时，必选参数在前，可选参数在后。
	 如果要折行，请在逗号后进行，而不是参数赋值的等号后。
   函数文档：在函数定义行结束后，请跟进一个函数文档，包括：
     描述块：一句话总结函数的作用
	 参数块：以“Args: ”开头，每个参数一行，阐明各参数（包括数据类型）。
	 返回值块：以“Returns: ”开头，阐明返回值。
	 各块之间留一个空行。文档效果以不阅读代码即能使用函数为准。
   
   函数声明的例子：
     CalculateSampleCovariance <- function(x, y, verbose = TRUE) {
	   # Computes the sample covariance between two vectors.
	   # 
       # Args:
	   #   x: One of two vectors whose sample covariance is to be calculated.
	   #   y: The other vector. x and y must have the same length, greater than one,
	   #      with no missing values.
	   #   verbose: If TRUE, prints sample covariance; if not, not. Default is TRUE.
	   #
	   # Returns:
	   #   The sample covariance between x and y.
	   n <- length(x)
	   # Error handling
	   if (n <= 1 || n != length(y)) {
	     stop("Arguments x and y have different lengths: ",
		   length(x), " and ", length(y), ".")
	   }
	   if (TRUE %in% is.na(x) || TRUE %in% is.na(y)) {
	     stop(" Arguments x and y must not have missing values.")
	   }
	   covariance <- var(x, y)
	   if (verbose)
	     cat("Covariance = ", round(covariance, 4), ".\n", sep = "")
	   return(covariance)
	 }


6. R 语言细节
   不要用 attach() 函数
   用 stop() 抛出函数错误
   尽可能地避免 S4 对象与方法；不要混用 S3 与 S4.


